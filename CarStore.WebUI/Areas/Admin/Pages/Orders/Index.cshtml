@page
@model CarStore.WebUI.Areas.Admin.Pages.Orders.IndexModel
@{
    ViewData["Title"] = "Quản Lý Đơn Hàng";
}

<!-- Page Header -->
<div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-2">
        <i class="fas fa-receipt text-blue-600 mr-2"></i>@ViewData["Title"]
    </h1>
    <p class="text-gray-600">Theo dõi và quản lý tất cả đơn hàng của khách hàng</p>
</div>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
    <div class="bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl p-6 text-white shadow-lg">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-blue-100 text-sm mb-1">Tổng đơn hàng</p>
                <p class="text-3xl font-bold">@Model.Orders.Count()</p>
            </div>
            <div class="bg-white bg-opacity-20 rounded-full p-4">
                <i class="fas fa-receipt fa-2x"></i>
            </div>
        </div>
    </div>
    <div class="bg-gradient-to-br from-yellow-500 to-yellow-600 rounded-xl p-6 text-white shadow-lg">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-yellow-100 text-sm mb-1">Chờ xử lý</p>
                <p class="text-3xl font-bold">@Model.Orders.Count(o => o.Status == "Pending")</p>
            </div>
            <div class="bg-white bg-opacity-20 rounded-full p-4">
                <i class="fas fa-clock fa-2x"></i>
            </div>
        </div>
    </div>
    <div class="bg-gradient-to-br from-green-500 to-green-600 rounded-xl p-6 text-white shadow-lg">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-green-100 text-sm mb-1">Hoàn thành</p>
                <p class="text-3xl font-bold">@Model.Orders.Count(o => o.Status == "Completed")</p>
            </div>
            <div class="bg-white bg-opacity-20 rounded-full p-4">
                <i class="fas fa-check-circle fa-2x"></i>
            </div>
        </div>
    </div>
    <div class="bg-gradient-to-br from-red-500 to-red-600 rounded-xl p-6 text-white shadow-lg">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-red-100 text-sm mb-1">Đã hủy</p>
                <p class="text-3xl font-bold">@Model.Orders.Count(o => o.Status == "Canceled")</p>
            </div>
            <div class="bg-white bg-opacity-20 rounded-full p-4">
                <i class="fas fa-times-circle fa-2x"></i>
            </div>
        </div>
    </div>
</div>

<!-- Orders Table -->
<div class="bg-white shadow-xl rounded-xl overflow-hidden">
    <div class="overflow-x-auto">
        <table class="min-w-full leading-normal">
            <thead>
                <tr class="bg-gradient-to-r from-gray-50 to-gray-100">
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Mã ĐH</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Khách Hàng</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Xe</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Tổng Tiền</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Trạng Thái</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-left text-xs font-bold text-gray-700 uppercase tracking-wider">Ngày Đặt</th>
                    <th class="px-6 py-4 border-b-2 border-gray-200 text-right text-xs font-bold text-gray-700 uppercase tracking-wider">Thao Tác</th>
                </tr>
            </thead>
            <tbody id="orders-table-body">
                @foreach (var order in Model.Orders)
                {
                    <tr class="hover:bg-gray-50 transition-colors" data-order-id="@order.OrderId">
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            <span class="font-bold text-gray-800">#@order.OrderId</span>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            <div>
                                <p class="text-gray-900 font-semibold">@order.User.FullName</p>
                                <p class="text-gray-600 text-xs">@order.User.Email</p>
                            </div>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            <p class="text-gray-900 font-semibold">@order.Car.Brand @order.Car.Model</p>
                            <p class="text-gray-600 text-xs"><i class="fas fa-box mr-1"></i>SL: @order.Quantity</p>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            <p class="text-blue-600 font-bold text-base">@order.TotalAmount.ToString("C0")</p>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            @{
                                var statusClass = "bg-gray-100 text-gray-800";
                                var statusIcon = "fa-circle";
                                if (order.Status == "Completed")
                                {
                                    statusClass = "bg-green-100 text-green-800";
                                    statusIcon = "fa-check-circle";
                                }
                                if (order.Status == "Canceled")
                                {
                                    statusClass = "bg-red-100 text-red-800";
                                    statusIcon = "fa-times-circle";
                                }
                                if (order.Status == "Pending")
                                {
                                    statusClass = "bg-yellow-100 text-yellow-800";
                                    statusIcon = "fa-clock";
                                }
                            }
                            <span class="order-status px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full @statusClass">
                                <i class="fas @statusIcon mr-1 mt-0.5"></i>@order.Status
                            </span>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                            <p class="text-gray-900">@order.OrderDate?.ToString("dd/MM/yyyy")</p>
                            <p class="text-gray-600 text-xs">@order.OrderDate?.ToString("HH:mm")</p>
                        </td>
                        <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm text-right">
                            @if (order.Status == "Pending")
                            {
                                <a asp-page="./Edit" asp-route-id="@order.OrderId" class="text-blue-600 hover:text-blue-900 font-semibold hover:underline transition-colors">
                                    <i class="fas fa-edit mr-1"></i>Sửa
                                </a>
                            }
                            else
                            {
                                <span class="text-gray-400 text-xs">Không thể sửa</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (!Model.Orders.Any())
{
    <div class="text-center py-16">
        <i class="fas fa-receipt fa-4x text-gray-300 mb-4"></i>
        <h3 class="text-xl font-semibold text-gray-700 mb-2">Chưa có đơn hàng nào</h3>
        <p class="text-gray-500">Đơn hàng sẽ xuất hiện khi khách hàng đặt mua xe</p>
    </div>
}

@section Scripts {
<script>
    // Function to add new order to the table dynamically
    window.addOrderToTable = function(notification) {
        const tbody = document.getElementById('orders-table-body');
        if (!tbody) return;

        const newRow = document.createElement('tr');
        newRow.className = 'hover:bg-gray-50 transition-colors animate__animated animate__fadeIn';
        newRow.setAttribute('data-order-id', notification.orderId);

        newRow.innerHTML = `
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <span class="font-bold text-gray-800">#${notification.orderId}</span>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <div>
                    <p class="text-gray-900 font-semibold">${notification.userName}</p>
                    <p class="text-gray-600 text-xs">${notification.userName}</p>
                </div>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <p class="text-gray-900 font-semibold">${notification.carBrand} ${notification.carModel}</p>
                <p class="text-gray-600 text-xs"><i class="fas fa-box mr-1"></i>SL: ${notification.quantity}</p>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <p class="text-blue-600 font-bold text-base">${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(notification.totalAmount)}</p>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <span class="order-status px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                    <i class="fas fa-clock mr-1 mt-0.5"></i>${notification.status}
                </span>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm">
                <p class="text-gray-900">${new Date(notification.orderDate).toLocaleDateString('vi-VN')}</p>
                <p class="text-gray-600 text-xs">${new Date(notification.orderDate).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' })}</p>
            </td>
            <td class="px-6 py-5 border-b border-gray-200 bg-white text-sm text-right">
                <a href="/Admin/Orders/Edit/${notification.orderId}" class="text-blue-600 hover:text-blue-900 font-semibold hover:underline transition-colors">
                    <i class="fas fa-edit mr-1"></i>Sửa
                </a>
            </td>
        `;

        // Insert at the top of the table
        tbody.insertBefore(newRow, tbody.firstChild);

        // Update statistics
        updateOrderStatistics();
    };

    // Function to update order statistics
    function updateOrderStatistics() {
        // This is a simple implementation - you might want to fetch updated stats from the server
        const totalOrders = document.querySelectorAll('#orders-table-body tr').length;
        const totalElement = document.querySelector('.bg-gradient-to-br.from-blue-500 .text-3xl');
        if (totalElement) {
            totalElement.textContent = totalOrders;
        }
    }
</script>
}
