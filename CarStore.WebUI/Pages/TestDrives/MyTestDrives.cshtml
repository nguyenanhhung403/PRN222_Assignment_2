@page
@model CarStore.WebUI.Pages.TestDrives.MyTestDrivesModel
@{
    ViewData["Title"] = "Lịch Lái Thử Của Tôi";
}

<div class="max-w-6xl mx-auto">
    <div class="bg-white rounded-lg shadow-lg p-6">
        <div class="flex items-center justify-between mb-6">
            <h1 class="text-3xl font-bold text-gray-900">
                <i class="fas fa-calendar-check text-blue-600 mr-3"></i>
                Lịch Lái Thử Của Tôi
            </h1>
            <div class="flex items-center space-x-4">
                <div id="connection-status" class="flex items-center space-x-2">
                    <div id="status-indicator" class="w-3 h-3 rounded-full bg-gray-400"></div>
                    <span id="status-text" class="text-sm text-gray-600">Đang kết nối...</span>
                </div>
            </div>
        </div>

        @if (Model.TestDrives?.Any() == true)
        {
            <div class="grid gap-6">
                @foreach (var testDrive in Model.TestDrives)
                {
                    <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <div class="flex items-center space-x-4 mb-3">
                                    <h3 class="text-xl font-semibold text-gray-900">
                                        @testDrive.Car.Brand @testDrive.Car.Model
                                    </h3>
                                    <span class="px-3 py-1 text-sm font-medium rounded-full
                                        @(testDrive.Status == "Confirmed" ? "bg-green-100 text-green-800" :
                                          testDrive.Status == "Pending" ? "bg-yellow-100 text-yellow-800" :
                                          testDrive.Status == "Cancelled" ? "bg-red-100 text-red-800" :
                                          "bg-gray-100 text-gray-800")">
                                        @testDrive.Status
                                    </span>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600">
                                    <div class="flex items-center">
                                        <i class="fas fa-calendar-alt text-blue-500 mr-2"></i>
                                        <span>Ngày: @testDrive.ScheduleDate.ToString("dd/MM/yyyy HH:mm")</span>
                                    </div>
                                    <div class="flex items-center">
                                        <i class="fas fa-car text-green-500 mr-2"></i>
                                        <span>Năm: @testDrive.Car.Year</span>
                                    </div>
                                    <div class="flex items-center">
                                        <i class="fas fa-dollar-sign text-purple-500 mr-2"></i>
                                        <span>Giá: @testDrive.Car.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                                    </div>
                                    <div class="flex items-center">
                                        <i class="fas fa-id-badge text-orange-500 mr-2"></i>
                                        <span>ID: #@testDrive.TestDriveId</span>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(testDrive.Note))
                                {
                                    <div class="mt-3 p-3 bg-gray-50 rounded-md">
                                        <p class="text-sm text-gray-700">
                                            <i class="fas fa-sticky-note text-gray-500 mr-2"></i>
                                            <strong>Ghi chú:</strong> @testDrive.Note
                                        </p>
                                    </div>
                                }
                            </div>
                            
                            <div class="flex flex-col space-y-2 ml-4">
                                <a asp-page="/Cars/Details" asp-route-id="@testDrive.CarId" 
                                   class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm">
                                    <i class="fas fa-eye mr-1"></i> Xem Xe
                                </a>
                                @if (testDrive.Status == "Pending")
                                {
                                    <button onclick="cancelTestDrive(@testDrive.TestDriveId)" 
                                            class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors text-sm">
                                        <i class="fas fa-times mr-1"></i> Hủy Lịch
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <i class="fas fa-calendar-times text-6xl text-gray-300 mb-4"></i>
                <h3 class="text-xl font-semibold text-gray-600 mb-2">Chưa có lịch lái thử nào</h3>
                <p class="text-gray-500 mb-6">Bạn chưa đặt lịch lái thử nào. Hãy khám phá bộ sưu tập xe của chúng tôi!</p>
                <a asp-page="/Cars/Index" class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                    <i class="fas fa-car mr-2"></i>
                    Khám Phá Xe
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Cập nhật trạng thái kết nối
        function updateConnectionStatus() {
            const statusIndicator = document.getElementById('status-indicator');
            const statusText = document.getElementById('status-text');
            
            if (typeof testDriveClient !== 'undefined' && testDriveClient) {
                const state = testDriveClient.getConnectionState();
                if (state === 'Connected') {
                    statusIndicator.className = 'w-3 h-3 rounded-full bg-green-500';
                    statusText.textContent = 'Đã kết nối';
                } else if (state === 'Connecting' || state === 'Reconnecting') {
                    statusIndicator.className = 'w-3 h-3 rounded-full bg-yellow-500';
                    statusText.textContent = 'Đang kết nối...';
                } else {
                    statusIndicator.className = 'w-3 h-3 rounded-full bg-red-500';
                    statusText.textContent = 'Mất kết nối';
                }
            }
        }

        // Hàm hủy lịch lái thử
        function cancelTestDrive(testDriveId) {
            if (confirm('Bạn có chắc chắn muốn hủy lịch lái thử này?')) {
                // Gửi request hủy lịch
                fetch(`/TestDrives/Cancel/${testDriveId}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Có lỗi xảy ra khi hủy lịch lái thử');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi hủy lịch lái thử');
                });
            }
        }

        // Cập nhật trạng thái kết nối mỗi 2 giây
        setInterval(updateConnectionStatus, 2000);
        
        // Cập nhật ngay khi trang load
        document.addEventListener('DOMContentLoaded', updateConnectionStatus);
    </script>
}